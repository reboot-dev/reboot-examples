# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from hello_world.v1 import greeter_pb2 as hello__world_dot_v1_dot_greeter__pb2


class GreeterStub(object):
    """//////////////////////////////////////////////////////////////////////

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greetings = channel.unary_unary(
                '/hello_world.v1.Greeter/Greetings',
                request_serializer=hello__world_dot_v1_dot_greeter__pb2.GreetingsRequest.SerializeToString,
                response_deserializer=hello__world_dot_v1_dot_greeter__pb2.GreetingsResponse.FromString,
                )
        self.Greet = channel.unary_unary(
                '/hello_world.v1.Greeter/Greet',
                request_serializer=hello__world_dot_v1_dot_greeter__pb2.GreetRequest.SerializeToString,
                response_deserializer=hello__world_dot_v1_dot_greeter__pb2.GreetResponse.FromString,
                )


class GreeterServicer(object):
    """//////////////////////////////////////////////////////////////////////

    """

    def Greetings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Greet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greetings': grpc.unary_unary_rpc_method_handler(
                    servicer.Greetings,
                    request_deserializer=hello__world_dot_v1_dot_greeter__pb2.GreetingsRequest.FromString,
                    response_serializer=hello__world_dot_v1_dot_greeter__pb2.GreetingsResponse.SerializeToString,
            ),
            'Greet': grpc.unary_unary_rpc_method_handler(
                    servicer.Greet,
                    request_deserializer=hello__world_dot_v1_dot_greeter__pb2.GreetRequest.FromString,
                    response_serializer=hello__world_dot_v1_dot_greeter__pb2.GreetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hello_world.v1.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """//////////////////////////////////////////////////////////////////////

    """

    @staticmethod
    def Greetings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hello_world.v1.Greeter/Greetings',
            hello__world_dot_v1_dot_greeter__pb2.GreetingsRequest.SerializeToString,
            hello__world_dot_v1_dot_greeter__pb2.GreetingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Greet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hello_world.v1.Greeter/Greet',
            hello__world_dot_v1_dot_greeter__pb2.GreetRequest.SerializeToString,
            hello__world_dot_v1_dot_greeter__pb2.GreetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
