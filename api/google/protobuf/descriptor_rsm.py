# yapf: disable
# isort: skip_file

# Standard imports.
import grpc
import traceback
import uuid
import resemble.aio.state_managers
from abc import abstractmethod
from datetime import datetime, timedelta
from google.protobuf import any_pb2
from google.protobuf.descriptor import FileDescriptor
from google.protobuf.message import Message
from google.rpc import code_pb2, status_pb2
from grpc_status import rpc_status
from resemble.aio.contexts import (
    Context,
    ReaderContext,
    TransactionContext,
    WriterContext,
)
from resemble.aio.errors import Aborted
from resemble.aio.headers import Headers
from resemble.aio.idempotency import IdempotencyManager, Idempotency
from resemble.aio.internals.channel_manager import _ChannelManager
from resemble.aio.internals.middleware import Middleware
from resemble.aio.internals.tasks_cache import TasksCache
from resemble.aio.internals.tasks_dispatcher import TasksDispatcher
from resemble.aio.headers import Headers
from resemble.aio.servicers import Servicer, Serviceable
from resemble.aio.state_managers import Effects, StateManager
from resemble.aio.stubs import Stub
from resemble.aio.tasks import TaskEffect
from resemble.aio.types import ActorId, assert_type, GrpcMetadata, ServiceName
from resemble.aio.workflows import Workflow
from typing import (
    AsyncIterable,
    AsyncIterator,
    Awaitable,
    Callable,
    Optional,
    TypeAlias,
    Union,
)

# User defined or referenced imports.
import google.protobuf.descriptor_pb2
import google.protobuf.descriptor_pb2_grpc
# Additionally re-export all messages from the pb2 module.
from google.protobuf.descriptor_pb2 import (
    DescriptorProto,
    EnumDescriptorProto,
    EnumOptions,
    EnumValueDescriptorProto,
    EnumValueOptions,
    ExtensionRangeOptions,
    FieldDescriptorProto,
    FieldOptions,
    FileDescriptorProto,
    FileDescriptorSet,
    FileOptions,
    GeneratedCodeInfo,
    MessageOptions,
    MethodDescriptorProto,
    MethodOptions,
    OneofDescriptorProto,
    OneofOptions,
    ServiceDescriptorProto,
    ServiceOptions,
    SourceCodeInfo,
    UninterpretedOption,
)


def MakeLegacyGrpcServiceable(
    # A legacy gRPC servicer type can't be more specific than `type`,
    # because legacy gRPC servicers (as generated by the gRPC `protoc`
    # plugin) do not share any common base class other than `object`.
    servicer_type: type
) -> Serviceable:
    raise ValueError(f"Unknown legacy gRPC servicer type '{servicer_type}'")


# yapf: enable
